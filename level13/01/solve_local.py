import base64, re

s = """
TVA4amNWVjYyQ0tuUm5mNVBiS0hjSnp2ajdiZ3NpWUFnRTJxYnMydFJvV2I4NEptaE1GSnBORVQ5RWJGeWJlVDRreGpWdzRkc040SG5SaERkZHZ6UHRyZXRXOGR4cXV6N2hUTnRDRW03R2VHTlNFdmhZNkphblV5QWh2SFphU2NYQnNZNXVUcFNIbXFXNVd2U2cyRVF6d0IyS3dQRWFZcWlIR3ZHR3dhREFDQUdWUkRTRlJKc3NERVRqV1hmTkFEVGFmOTJteWFmR2JHZERoY2RpbUcybUV2Y2dBY1lTY0pFZHdZY0Q3Q3F0d1p3MjRKcnZvUnY3cG1OZXRlQ1ZyQVp3aDdFUVJlVFBLRGtzTGhMSkthQVZHYU5BTmprc0JRREVCdjZ0UjlaNEVCODlNNVdMclhUOGI4UGFjOENNZzZHQ0hnYWdLVDZXWlRTelBZQTl2dUNzaGFibkpKV2lEakdxeUdBUjRwd3dISERldGU5akU1a2dSSjZZcVd0TDk1M1Jla2F4RUc4anJmUnlOV3Jjb3NhY1k0Qm81S2I1SzVjNUx2d1p0bnd6cGJaZlFyS256S2JnYkxRMnNhc0xkM2NodnFIb2tjczlQOXU1ZHVSTGF4VFo2TG1Yak1iTDVXbkdzQmpIeEdtWXVwVGVyaVBTS1Z1N2dOaUt6djM4cVBvRlpKeWNYaHg2WHNvUWJYOEFhRTRuQWhoNG5nZzlhV3RrWFFIc21iRmhmWlJRUjd2S2RTaTQ0RFlpZjg1TmRCZFpIZmNxb3lKSnhrSHZ3NEhqc0dtMmdWcXBpZ1hESnJxWkdhOVVOblViV0NjWTNiOUd3V0hwc3hlREx2RnUzQTQySGc1Y3VQTnh5eUF3d2tHSEZSNkRWVkZZNW1yN05hYWZHdzU2Rm1lRTZ4ZkE5UE5oZ1RDSmFKMzgza1lzQUd2S0tSVko1VW56TGZKWWI1VGZER0RkUGF0emU5ZzV2RDdKUERncm1mNHFad3hrMmVXbm1YOEduWTlERUZ1QkVxWERhYkVpVEtOZGNKcVA4MjVLc2d5eVlUbndRa1l1ZGQ1Y2R5NUFRaVZYYlI3dlBCR3JGNWJzVXhqNVpEUEFLZnVCUzJ6RktwZGduam1VTG9GblBucE56QUxHbWM2aFhxbmZkdnRxWW5HNGRGbmJwVGhLWFNQNTZadjdCNUZnb3gzUkFyQjVINVJhY2hRR3ZLSlhmc0tHeU01VWJRU05hSHdKZW9tVE5OMlpCTWtIa3FIQjR2TVFLaEdBZnhoa0FXVDdiTk5IZ21GYlZEYzdDenU5ZnlxSkp3cXJYU2dxU1BXY05YalE2Mw==
Y3V5WHRFa0Z3VjRxOHJ4SFNuV0cyUEV3dVZXc1MyenVqeUZyYTlNU1NEYW9LWkVSZjZRYTkyYm84ZEd5dVhLSnVZM0s3ZFd5WkpIOU5oblpDRGd5MjRBU2k2eU5hWWhYVUJyOUNVWEp0RVVIY0w2RUxlblZTTnd0NDR4U1pkQUVMOHdxQ0x0TjZlaUFzelVFWXppSmNOcGE5TWkyalp2ejl1aTlZeFJZc29KWm1RYndzWUR0elg2bVFmQjNDTHE0WWtSaEZuRGJxQlpZVkFhU05vbTV6OVc4WmNiVXkydFFGSlZIZkdXUlhlVGdFalB0d0VyVHQ0Y3dHVGNBMkxnYXg3RFRLNlJ6dkM0TWhuZHBWN1p6ZWdUU0h6ZDIyUmhkeHE4dW9uYTlvSHFFQ0ZHaW5YSkJEcmVwTENHY2RFS0V4NzRZdVk2ZUNzVTJwakJrTWZuNEhudlVzbWdrTlJod3JHUzN4VG1hUkZRZU1vQUpGN3FqSHdweUtHTFZkVXFhUmhDSFZFYmdFMnd1Z0Vka21acUQ4ajdxbnU1dWNkNFU5dEZITUtHWHhQVVhNOFFCVFdMekNMMkNWMkpzZGZWSDQ4N3B0aExNWkJmbzdINE5iZ3Q0NUNxQ295cXRpMnJBZGtWWkRtNloyNU5icDZOb2RDQVFRakc2b0ZqejdEVVp4RHdjN2FLeXN2NmdVaHM1YTJBNnc5M1ZGakp5UVJhNDZwZ25WNENGc0hDemZWNEtlbmpaWEVIS0FYUnBRTFNKTVFQdzZTaUI3eXFyMnU2YndGcXdMRGdldmNGTlZhYVlncXhrdFNiNGdOU2c1VkZCcGFZZGFFajc5QVNFcGRRZVFhYVlxcXVnZ21DWDZmYjRzVVJrQ1JteXM0NG9qV1dhM0trQkdoUWZZSzZIYkFRUGdySEhQTVljR2E4bXVvQVhMM1ZhSERuM3FuR2pMc1NtMk1IY1pDM0R6SGdKcENjUHNHZ241OVhOUnR0c3JtdFFXaEcyTUxqQTJTYVlCMkh2eEVkVFhiMmF0TmlZbUJHdDhBUUFjV1NrOFhSUXZCanhrQzRSTjZvdXZwamoyYnNDTjZHYXc2dzJnNHlXTUFrYk0yNnhQa0JSeUphS005VHVoU3Y2cDJRYW9nTFN6TmRvN2JBd0tVUzQ4ZWFKVGE2WDZWVHptWEFhN0FxRUNZbU5jUUQ4ZXRtRm9MNGlGNXVicmpOYVNnWlNQUjJqZlJTeFJheW94TWVtb01yUHJRZExnV3p4dWRUOUpGaVFTa2RodVh2YWREWWFreW9aU1dpRk5pcXJDZ3lUcm5ZRnQ4bURxYk1TUWp3WA==
Mm10VmFyeThjcXpGeEdhNGd0V2dQbVlieVVqNnQzNGNUa1FtdDZWYnllOVJacjNvQmJFVTI5Nm9nZXA0c1lpZUVHcW80RGZEelhOS1V5ZkRHZ012UXJtelJoZ2Zud29YU3MyYnZmcmNtRFVSZ3BSa240ZWVQaEhQazJKQTNpZXpBWHlXU01QZjRoZ0g2OWVpaHVUanU1TE5iN1lZeUZTNzdUYms2NjhicEthVURLNWNpcEJlWnMzY01oNW9MazNVckU0ekNzU2tuM214bmVEVXFqenhialJaM1JqaXlnUWVpTmFvRFZmVERCTmEyenZYYTQzM0czU2tRYmZvVGtWdzl1WWpBY3F4dGJBRFBoYkFydWJXZkRodXFaOW5Fc3lCcEZVREdoaXBOQkJXRjVoNU0zYVpqR0hNd1Fkc0tmVlA4blhtaTJiQUJWV2VidjNOQTJ3eWRkcENkNUZ4WWNlcVJVYmRkYktnYnRHTFE3TWpUb0YzRFFxTFpuNFA4c3k3SnRlRkNyZkVlOUE0bnJwNUN2SEoyR29NWEtKdGVBQ0tkYm1KS29zYmRDSko5RGNYMmpTN2FkTVp2ZnVFOWFNWVlpaGREdVBobXR6RWVLUmFLOEMyTlB3Uk05YXRKWHFXNjJ1ZVBiNTV0OVFSTW9FNEhwVFdrOVNxUWZVaDJyRG9rdVZKZGFYVHZqUG1TM0ozU1VpUFdzb2ptNDR6YXJmREdhckVqdTRUSGZ3WmluQzI2cTJBdWNCUFRWS0pVaDM3RERDbWFqTXZ1cjhzcTU0QmRES3lkSHp0eXV0SDlraDY0UU1ycEJydVdYcm13TjNZWThrVDNHNkNwVWJvOUY1ZUVIWVFROGlwYXNtdlBEMk1EWVNyYTRxM0RGN2hiNmh0NzdyY0tUTG40RVhjTDhSU05DV05tTlc4OHdIMnFZQzRXQnJqMjdHbmF4Q2hZcUo2SHY5TWpGOUVMOHhvVlI4V1ZMTTRzUlpmM2NQM0JVVEZjRlZZQ2ZWRlpCUjV4VThUZ1ZEZGVHczlFMzUyb1pheUJzQ2FDM1JiUThOaXh5R1VuYkVyUjRxS2VoOXV0ZEpmWmJIaFN0MzRhNUpTaGJEQWtHc3h0OFN4OFdNdVY0Z2NwdlpuNTRYU1dDM1JROFdVd1ZFTXF2MjZBOEpYb3M2MzJNaENobVlzZ1Nzd1c2RjhTb1F0OVVLVlFWYXhCY2lrVkRjQUZkdUdWdGRwNTd4ZUViQmNDUHA1d05VdXVVZWpSWk5GanFoWmZGaUFCczlacHpmb0h3UlhlWHY5Z3ZUSFoyUUtmeWVheHhIenRYZWE5dVluYW93Sg==
ZDdWZVdCckFXdGprZkNVZUNGY3dFWGdKbW1XaERYV1VrU0JYOGJKbkNpajlFa05neUVwVENFUU43S3BIcnpEalhramJ2SmZaZWk4cXBwdFJlYWt6ZmF4WGh1amFKbktjNXo3TWF1R0F2NWlrcWp6ZkxkVTJ5Mm9xTEI1SnJoWmRvcFlQOHBjcnFWZUFtV3g5d251RkNqUzd3SlF2NU5qaFZ4NVhQWkNyYWdGQUVtVm10WExkVmQ1ZzlvYW5vYXhkYzUyYXJzdG02ajludXdhd0pDNEF1SlZQemYyMjdFRG45dWdXaXFQc1hFWk5GTGNiV05idXNrM29oYWlqaGFKUWtTWjI2a1NjVmE5YmdjVThORWpzZEhua3BYVjZnRTVGM0NhZmVEZG82TTRFb002UWc0c0dwTnVpc1lSMmllUkttY29hdkdEQjlaSnpCZ3RLdzMzdFJWWFBwNnpVNnk2YXFiQW5xUk5zdDNRTXYzR0Z1Q3hpQjhyVHJoWUxOb1RKaUJwRW1FalNRdlFCSmlYQkh6WVUzZWJSOERFR3d1cW1yOUNFaU5GcG5MYW91dU5nTmRiVE5iUHNSYWZSdlA3WGJGYjVTdTNpODlYdzlzTlpqRlppSERXdGR0aGU0dHRSb0V6TVczc3V0cDVmVlJpYXA5YUhmVjdOeE1GdVM4VlhpQW80dHhMN1RyR211VFFveENTOUNmRHBISGU2YmFUZVZhelc4cDJESGFKZHZVRUFnN2JFVFpWbmRDelR0TEFFSHlIWnE1WFhyYTRnYUFtdFo0TUpFc2s4amFhcTdhd3JQQzNKSlE1QnJHcDhFUGthcVF1d2syYVpIUTNQdzVrMlE0b3QzYXRzQUxEczNUVWFEV0JMU0xCckpxQ2NoeEgyQUFWaG1ydzRFUFdCYUp4dFdCSENIUmdzUndSaFNEOG5oZ0VlVkFRR0NCWmJnajk4Z1liUnFveTlDemQzUzZuNUxlMks1N0NKbno1aTJSWkdhZ0Fhd1RoaXljNzVjZnNNWjNOaWN0NVROUmNpVlB6S0xSRlo0VlphQVljN1E3OUJVNE4yWWVnMjhCOGZVd2pHQlNiR29EZnRnQWM3aXRqY1hZcnV3ZGNvWHFpOHhaWVlDYWtaYXZUN050UmNVSmN3c1NpV3lYOWhHYUc5ZnplNmgyYjlrYmh0VmNqRjdZQmdmM284ampndUVpZ21nY2FTSndXQTR0TnM2c2R3aEFMeGZoWHU1cmRuVjI2djJjNllROEdHNTZvamZmQ2FxQ2VucFVqWlZhQldDZXdFMnRXd2tSR3RpcFhnWFFDcEcycTgzY29MWWV3eQ==
NGZROGI2RUd5ZmVYdjVOYVVITjNuMnFNQWZhTm9Yc1hmR05QYUxDeE1EWUNxZE1zc3NOYmlZUkJRRW0zcW83dnlnSFl0Snl3U3h6enBwZW9XM2FTWkx3YlllWHpieVhva2hzSHZVd3Vuc29XNHg2ajVaRzliSkNBVE56VHNINUJnRVplVEZwSG9jTWRHRWFlNlVzYmpKWDgyQ1VaajNvYVlUVGFUY0w4TnRCVmtiOG1KeTVGS0pnZWI1cHV2R1hkSGpYSHk0UGtBMlVUeTZLZWVHN1BCam5ibzlGVnZuRkJ3NHg1R1FiN05GbVJkQ0NZemVMRDR3aGhEaFI4R2FxYTV0dkNjS25LSnN0a29rWlZSNm15WXp6YkdMa0RhbWNIeEttNEVwZU5lMllWd3Flblg2Y0dMV0d5ank2YWVLWXd0ZWFZWjNTdHlBOXdXdXBiZ1pxeFNjYm8yaGJYYXRjalNFVENqenBNZHZXdFR1YUpidzVhdm5EYUFZbVhCZExycGdKN1lmWTdZc1lodmRkV2RCRWNQSmtRNHI3VUhSNzRaNDlrbUJzTXJaZkNweWg4YXJRc0hLVnJkNUdMcUJGZFJ1NEo2enBLN1FYaEFKdEpmQTRUbk5LTGlzYmt6RlIzTmdpU0hxZzVXaVBmQjk0ZXhKM05qem1ZdnlQUGlkOVNjM29LZmYzelN3ZFBzMmVwc1hXZDhBSm1zSk5iYnloYU04ZHJucnVMZ1oyc3V5TVV0VWVhVnM5dzQ5RThDaHh6QlNkeHdYWGt4UnZrbkVLTHlqSGJXdjVQdWdOZ1VTNFJnbXNDUWhVUXBFb2Q3bVNEbWk5Sk1MVGRwWVpINmhOUmEzdTM2NXVXRENYY0xuc3ZkVDJMVGFiSlJlZDZBTlUyaERuaEhTWGtwZm44eVU5R3V3eXpBWW1TZm01Y2JKZUQycGdvVmNiNjRucFZHa1FOZXNuWGNoUTRDekFEQUpVMmp3dnNpMzhKa1pZekZDODgzOXA4dHNlVVQ2TmhpWVhvWFZpNDdyalRTVENaaVRjTVhqM0dFN1hVbUtDMjZ2YVE5WU1aOHQ5YUFDOXFuMm51ZnQ0ampVVDdQcUtYc1lxbkhlR0dCUVBNRUc4cW5IcU5TWkJad3JpMjdQTXJqQmZvbllSWTRVZUsyenJ6eWJmV0N3RnJ2ZGtaNEduZkRrU04yWnN0V2hvczh6ckJQRXB5QnBDa21pc3ZxU3FBSFN5Zm9VbVV2VWlWZXRLVGJORVE4dDlCR0Nubk5tUExyQVVlVlFzanZRMnJxYmZuaE5wZWF4ajZoTm12OUt2SFhuN2dLVWdjYThzRA==
ZVhvTkZ5WjluRUVUM1daQVV3dG9OWWNHY2NOYXA3QjJ1UWpoVE1TVGtDNnNXOUVKSENWb1dQQ2I5eldlQ2tmVW9LSGNuVE5wRzh4emJINTNNOVNHTGplVWFtSldmR0xyM0R0aExhanZ4dFB5OWVIV1M1Q1BQV01neVBxUmpwbU1iWnk3eGVENHNxQWRZZTZVa3NTSkVTanBBWncyMnZIQk5MRUhrRFliajVRZHAzd2h5am9HY1RvTFpDc1hrVmtBNFl0ZG9jTW4zb28yU3pxaHJXZGdaZ2FOZDlZNmc1QmRzZHVpWWF0cDVDRmpyVlVzUWFTcEtnb1k3MjNtN0Y2VEJCaXZUOUF5c2RuV1JOelVnNnNmb01QTldUZzJYTGNkM25ZYmVrWUJIS3JUV2twWlRhNFI0eWRTR0FVUHJLbnVRQURDNDhWWDdnQllSelVnRWdVYWNjZnU0bWM1a2JYVHE5VUtBcmFZS1VkSGRQNVBIUTJQd3hjYU1SWkFmVXl6RnQ2R3NyQTNZSzU0ZWpHdXlpZkpRZkZMVmJraGlwYlpDaVJCOXc4NXRRUGFXNjhjRzJuRm5td1ZxZGlyZFZ0TVdQYUFhYjI5Z25Fa0VEV0NhRUpSQUJQSkhQZzlTaktqVjg4cUNrYXJQZll1Y3VxOUZFd1lMUVJhdGFRWTJWV1FDdmphTXRaYWN6RXdDdml1SGZEclNWSk5tQm5BZ0FneERjcGM1VmlBRFppTkI5YXB6UTg2bkZyZTJzZFRYbVJGWmtCZHBRQzRBaHpoc3B5QUpkOUZhYWE5bjJBTnh6YXBDbWFzcDcycjIzTDdwNnVGdVh5M3VWVVNRQzkyc2dZdUZHY2hRQVYyTUo1emR5WWpZblVzYUc2MkhudFdMclV3dVhYVEp2cGJ5U2pFUW5jR1lON3ZGbnVLVWtYTEtrYkR0ZURkQUJhNHV0NlFRTDNQdEhIbmhRTHc3YVlUY25acDZGNzJmaVJjY0s2NmVOM211c3BVOHpKckd0UG1vajVWQ0JKNFJoUkIzWDJVUVM4UWY1OTZKbWlMVFFkMlZxNTZwV0pQOTlrUlFoellIaWdUNnlIVmlEWGVGZ2hvRmZIaWFTNll5aXZoVlZGeXRnSjNHZ2FYOTJHeW1VcGFKQmFCQmZ5bzJ6WVdnd2FVWXdhWHpiMzdiODVZc3ZnaDdKTWlMUkIyQmF4U0ZYa2NlbjJ0SGJXMmRQcDNRU2paOWFWY1lRZExOS2FTNnhMZ2QydnRKNnZrN0pGQjlMdUFlYUo1aTRUTGtOcHlCUXJSY0gyeVlDYkc1dXZ2WGU2TExLS2dWeTVyck5Qag==
YVplUTJuV1RoTm9heWFvSDdYRWc5OHl3Q0JnVkxVR0tveW9hQ2c3Y3N5R1JmQkc3QTJaTDNCeHNZWW1YVE5KOW83ZFhRc1BkM2V3SzRRZFBFNXJWUGZhVkNEbjRLMlhLYTVaYWlXWUpoWlpoQ2daa0NpRXJzVVJYUUdFR3dVRFBxODQyOTlNU1BZa1d4Yjh0bUQ1S1p4TnNueWVxbTZRQm1TQWQ2RzU4Uk5BSDVDclVhY0JrOTZDdlBXVkx2cUtWdTRyTnM2Z29HRjk3bldzUzZ1S0c1djVyajd0RjVIWURQbmV2UGdIWXJLMjRSYlFSTkVtOGE1dUw4c1N2ZDVFSGphN2F0dVdQNnY5RG9aOWF6S2pKcjdkWHl1MzlWejVhZXhYNVMzNEVnaVpQdmtzc0xBRVd0TEY1akxpajdiNHF3cXJqNFczdU10NzdVQVZBN25oUkNnYWU0VHhmZXZYQnpSYUVNbnN0RmFiYW1odDQ1OHRIaHFKa25VajhqUnVob3dXNWJ4emNTZ2NjaDlmQXZkejZWd1FHOE5KZ2FRZEtVRHp1TXJOa2p2cEVlb1piZzRIQzlMcDdUUkFnaEEyYXh6Q3k1cnlQaDdyWlZrQUhUdHBHRFpycmh1c2VmTUhzVUVESFg2eHFYTHMzSmN6a1BSRDdYSmJHaWZhdHpQZkNHRkdnRGdnYmpkWFd4eW52c3poQmFBM2VpbThoTm1WV1lhbTltelN4NTRoc1J3b0FpVlJndkVMd1IyaHpEdEVmeFNndWo0OWZGTkUydERNZDVxQ0NqY1A2Y2dWNHVkZ1hRaXBFeGg0eWZDdG9hVzk5ZzlWcVhCOThKUHdZWmY1eDhLSEZVQ2hHcWozbmtibkpFNHhVbWhGZEN1NzR0NkM5NExHc3BGYWptTWR5THhjQmZmR1JMY0pWU0V1NTJKaW9TWTdIb3V3dFJieU1zRTgyTU5oUURXcEtMb2IyYnRYYzJuRnhuNFZhSGVIeWJ4eXFkR1VaREtVTnpQdXR2dUM1akNqVVVka2hrb0FSTGc2NGl0MnA1bWE5YlpCQzVMcEtmTGk5ZXJxb3I0NmVnbzVCdVF0QU1wYW1DWk5ZTUFhY0ttVVNVSHphdHdLZ3lmREhoYnJBUmJyc0J3ZmVLVURHdEZOalhzalhKdU41c2FpWGJSNGVKWndlYUsyaWtCZW12cXJKOXBaNDZES2ZrSFhGQ3JGMm9hR1I2OUZnTmR6aEFmc2l5VW5Gc1pMRFpocEhGU1plODYzY1hSbnZYY3Fxajl4N0ZMNUNab0ZQNTVoYmZCMkZ4ak43N3J4VDc5MzVyUU42NTgyOA==
QUE1czNIYXZGakw5WmJjdFY0bTZDbXFNc0hOTUQ1SGliUThRajVhRTVlekpwNnJTUEFpWUVkZU0zZkhOVjlhaDlqSFE2OWs1RFZ2U1lZUVREWnZhUXFUdnZoRWtIUWdkMkZUNlZKTVB5UTY4NUh4Y0xSRDhESmtVcXJrZE4zVEE4Y0NrV0JQUFY2UXBIRGNNb3VDQzNQNmp3cGp4NkdxdGRxS25LTHRpUWZ0bllHWmRmOTNWQUtxQUM3cm5pYk01bXJqY1FlM3pjNnlBV1R1TnpLcnFlbjg2OVNFR2VpdlNrTGdmS2Z3bXF4djZ0eWhIb3lLNWZwaFlzU3k5TnBkRFJRcjR0bVVXbzRzbjQ5ZUFtOEhtZldLUXhaYWM0emtmYkdneDI3YVA0VXVkV3F6YndLYUxrQ1NReEp5cWVMY3FrYUNOdG9ZZkRGcW9xOGRwYUVoTkNadkhUVXZ3SlFvQm1Rc2tSOGRlaW1SOHlxb1d1WVh1dWFNYlptcnFyZlZEWHJuNFdockdCR1RuWUg1eHc2RGdOc3ZOeTdqd0JIc3ZteTJkOUtWVDJRTktMS25NWlA1aDhNQ0U2UkNoRERpTnFXWmJOQzJxNG9ZemY2cXdNZGJoZkVFRUFERG9CNmd3Q0RWVjRrd0ZXTjl3ZFVIUG83TllCVFVaTHpnanByaWo4Sm9oU292ZUVVWVZxSGdCVTVDNnhlcWE0bWh6enZqbWFTZjlLZ1lXNFg5bWF1QmVMSjhjUHNvN2FUam03UTQzbzRma3B5Nk52MkRzUkQ1ZUhoeGNHbVg0ZVVwTlAzYTZWYUxuYWpzd1RQVExUVXBqa25pNXZtRXlDUUxuS3ByQkJhVzdDYTdmdVZzaFBtdG5zN0xWQWFRd1BEeWR2MlNoc3E0VmFSYXJiaEtqcnRnUVhYS04yeWJhbVZFM3F6aUhMWmFxWlVBN0FnS1BWYWJrYXFKODJYYUhUQVU5aUhWRlhiU29IcnVYWG5yQlJ3UkhtV1B5eVlZTHJaTEVuWUphZGZLN2tmOWdHalFpQWNCYUw5S2RoYUIyczJCQkdUSnlFQkhjd3VhR2hmYUhub29RMmo5QWR1c0NuVmNjWkRwcVlkaVVHcmd4NlJId1NxTGtKWno3dXRKMk1oRWVtRkhOcDM5eGlESEdUNERDVFlnbkROZGpGb0d6dkNzU3NaU0pxREEzUFNaa2F6RkF1ZkZoNlIzOFpNcGhTYUJ2MzhyUmgyZUxGUkI3Wms0QXlKalhtbkhWc2o0MzZXSll1MmloRDlGOXBNYUVtclJSUEpFejZldDhhSHJhV25XZHFlb2pRS1hxTG92bg==
dWFMSlJnWTdxN2tFU1Z0ZjdFR2g0SkxzVUtBYUZjcmpZc0dKcHphZnRZZW1nOWY0cHlvR2NjdEJyMk4zRHlmZThLUUhFR3EzaFBZeUc5Q2NvQm5SelV5SGdoRDlQblphUXN2aHF2R05Qb05vQ3hHQWJSRE42YVBSOHN4UVhWZlQ4d3FxS1I4V3VQQmtkZFN6bUNmN0VvVzRBMlZoYUJSbVR5aVpaemZHa2RYYlVDQ01wYTdpM1J4WExxWXdSWjg1YWhQZzNOUXNpWjdxaDIzNmdBVjNCQUg1Q1phaVRWYkVENHFlWFBVbUtzUkQybW5nQ1JmODhib21UYUxWN0U0Q01qZWpVUlgyNFVvdUtLYXdXZVU3MktTWm9Bb0ozWXhudW5HZ0RRenRlZ3poUk0zdkJycFJ1RUVDRkVFZ2FhdkV1NnFxcTJIWHZHNmp5cW41R21XdkdkZW5oVXdIdURQNHJQVE5lYUZmdUQzVks0R1VZdmNkalVOWHRGTGJKZ1hFam1Kdjhya25kSGNNQTRKeHVUajZDR3M4UWJtMmtlcVBiNm9UcnFpUTJxTlBkZW9qNUhnbzd4NGJVbzhWajhXOGpoanRtYnlxNXFBU0hCVnJSZGtHalAzRGVlQWhyZW9nbnlwRjRSeWQ2WnNlemFCTkR3U2tvOFZ5Nm5DOEtQQnVWVm53THVycFc4RHg0aVdHbU1mcDNBa2Z6UW5zV2I3c1RMYVdCZDZLM1R4dUJSM3VVRUtBODY1enNRN2g1ZHVTZTIzYmttenk5aDlLcmdyZWNKODNzYUJnUDdta3VxQWFTQ1Zic0pteEtKb3pNeGs2OHlmSG9kYmRDcVJoTWNmTHpxNU5UaFFRWjM5NUUzcG5walA3amdxSE1KRmU0WXdOZUZTaU1IbVhucHFXTlluTTdhRzdFZ1hYYTVSUmpqRnJjeHlQUFdoNlpZaVo2OUdaeXZiczNhdGFZTENzQmJaV2VleHNVYUdoWUtvNHh3RUZkc0tKUUZzOVlSdEE2bVJEVFhqYzhmblpXYWp4YXlHNVhLTlFYSE1tYjhhakZIVm9tMjZXVlRmVXE2SktUc1EyUXVZbmlnREFoSFkzRVZRUTVLZUZQQWdvVnRqUTZCb2hXZjkzZzRHUkdyR1RDOUJyN3prNHhUWExNdTlxczVhbkVQNnBaR2FjeFllV1dxSm9kYzZydEVKUEt1MnhOeG9DcUM0QWFBM2pGN01Ud0p5YTRLcThwcm1GY2JrNmdjUVRtamFhUWU3c3ZWeXVydVZxUmd1aXY5ZmJHRnJQSjZFY2s5THI4SnF3RTRhNVNBUktDYVM3aU1ZVA==
S0xqb3NCeWRhOXdTY3RjUG5nYWRhVHlwamt4d2ViQ0ZwajV6eFBlYm1tZzZHRUtYUUhnVkNNU1dvYUd6aG9LS29XekNMUVc2aVpIanc1TGZFZXZIU3BhbXlpcWdkdXVRUXhMZnNOZnZ6eWR4SkJneUN0d2R0RzlLTkRkNUt4TVF6Z2JSRE5rc0FlOTV2V2ZYMk5VejZqR1ZXUkVwZzdjbkRYU0M1RlM0S1RVSmlkZEtNRFFhZFljcWEzZlR1NWFvdGlwYUI0YUpwOVhDMnpkaHJrSnRHNXBnQjZoR25qZG5KNUplRnV0UXhXMkZoeTJDOGo4cktuYk5udkNFSkxuZzl1cnRvWFhtbVpkR0VtcHU3UDU3eWE3bm5CaUVZckZMNkZCYW1BSENZSm9MNWF6VGl6UFFacUJVcXRIV3ZTRkpBSGdLUmhqUEY2aXFpd2Z5WkZSa01EUnR5Z1BlaFBGTW40ZUt4VEd5c3JaVTZlOTY2aEVkS1Brb0F1Y0NwZXA4WGk1aERvaG9ROHBpR01KYkxrTkFoZGRRTHlLb1pVQlY0WDNmdms3VHBGM0VwREIyak1yMnFOS0ZHMzRWcXk1NXRmeHB1TVl3ZEdLdkhlUzdXVGNrOGNTNkFvbzJOcVlZWGtzNVpRaWFhS0gyb2FLQTRqeW1vRUp3ajNmRHJFQ2NiaHZhd3hROXh0VjRNd3NYR2s5ZEZDTkpKYXh0OGQzdG1nOURhTTZReHFldmZydXlOd3N4OFpHcVVyQ3pETGlhWXBTZ25CQTVoOXVBZG1IdUI4and2Y244Q1NxOXp3bkJhUGpEN2NMek1rYnNMN0x6dmlCN1ljYWJhV3FMYnFMV0haY0FhcFlBdEJieWdycWVMRE1MYWQ5RGRTRlBwUlpFcUx1b0tIVlJNOER6b3J5cERrY3hidGl2YkRHdjY1c2FwSEplalpRVG9hM2VUWkNOVVRLS0t4c0hGWENvbVdvQmZvWXNTTjkzelE3bnlFZFZLdWF5V0V6RWkyV2dkN0NCUG56SmhobkVtRmphTWdTMkJheU1obUFtYTU1NTNmS2NGUTdYbWRYNTJpck5VekJhaWJzZG5pTmlvTW5FdEFzVnZVY0FCdGFkTVFWM1RURHoyaHVONThvaEh4UlNWdmhHZVpaSlNuckVXQXZubW1QUEVHdVp1RW9KVEMydWF3RDhUcXZLNEF5UDN3YkFWdkNDZHdxc2FxVlFSMjhLblA2aEtCV3JhTGFMOE5xNUhyeG5pZ3BhcVZIeEJ1bVpiOVp6SEFnWjVHOTd0eXY1V3g5cWtaMmtpWVh0SEN1WFdRRVlLVWFoQVhtVg==
eHBZeUhLekxLSFR1NENBelZqdUx3MnpzQWVFdEhwcGhVeExEd2FzZUtzOFE3VzhMN2g4Rk04QkxNYkhmOGRFekFFanRKR0xmdm11S3dQRWRZUHFqNzZqRkJFNFpXWFlwM05OWGZVOEFLNGZyQTc5YzZiZEpkVmZhNURnR1laMk5QRmtlQUhkeEhZWUJDWlhuN0tGVnpWdmhLQVh4Z0JCZFB2bVpFNFRXVVFWOHRoTFdLalBvR1hXaG9hRXdERWFBd2h3ZGttckpFd0FOaUxkb2txd1RHWk14eVk5TWVHZFFKQm1rUmk3WEdBN01OVU5vdUVuYzhVQWR6S1Z2SnI2ekM0YzRmY3l0WGR0aXRHN21SUFB5RWY1SGVadm5ZYnpBdWczc1FTcFJHRmFYNGNCSkRXMjdGU0xSS1lHQXNIVlNyc3BwUVY3MlRwUnRVdG5tTkxMOUdoRGpDZlZ6MlhCUkpXVlk5RUI0ZUVmQXVRaGt0eWFCRUhjc2FabmtjSlBra3lMTEZKdGd2WEpuUTVCUzlFdllZcWlab3hVSEhGN05hQUNuUzRiTjQyYUZ6R1J5NndXdkJZNXhjdXhtV3NESEhWQzRTb1ZHbmtodlhkZnlMa2dwTnZNSHBGZ1gyaUFSUWhTOWVndE44YVBpckU5Vml2ZlVha0FKa2FhS1hjVmZDVVY5d2g4b1J0c1U4OXFaVm1UNWluaURvR2lpcm9OMlF1UEpUdktLNk1zak5KUThrc0x3aUJNd2FicEt1VHdQWk5mY1BFYzk1V041RTdwQktxaVE0M3U2dllnZFQ3d3djQWFkaVBzM0xtRTZkckhUekI1b0p5d2VtSnV4RHM2MjZMNjg5NFV0eFpqUE55MjRuM3IzZFc2Nm1MNmpINFNmdlJTQjJzbUtXYXByQ3ZmYVcybWNTVzJpdmF6RUVHYVBtdTJneWFzeGtkRjJNUXhkRHFwTlhRYUdFMjJDdmVVakY3VmpVUVZ2aGlGWWRjTERUVW1kM1VlRzNGdGZjRnl1Mll3Mkx2MnQzRkphbU5Ed0NFeEJETTVtWFZiVWVNTExOUDhEZmhheldWVWVtcUdLd2dXM201NVVjZnhvdk5lY21NYkthS1Fwc3N6bVlQM0JOSEFpcHRRd2NMZVR1bXRSV0IyOEpxUlNIZVB2U1dFYWtnQ0RIYldIUld1djhWY1VNUnhUZDl2WkZwZjVCUm1wTVFMNFhva3JvcXZueXlhZHlTYWFSYUthVDhVc2pGYXpXYXY1NG9Fc3RaN3FOREU3UHhURndKVm55Y2RyNXJHWXF3cERWRDQ5Rkc0dHRHaGlXNGJjZVhiUQ==
YXc5ZHF6dEtRV0pLQkVneVVKdlF5S3E0cTNVRXRmSmdBYVlrMm5RUHI0eFJ5VUZEem9rTFV2cGF6Sm9paWViRnZ5U1FZU2pDZkJ1V2M3VlZEVHRFdThzdTcyaGdxc1BINWFHeVcyZ21xUHp6d2JNNXFBdVRWWWlxdlFrcFpacWFkUEZOZEpzTXNZeGdCUkN0QUxWQlVNSmFBdm9TcGN1RFJSeHZYcUVOckRUdG5tS1ZzZm1pVnBaaVVLRTlRODN6dFJLQ2JNc2Y4V1NMQUxzQXZRWEx1RmNvQlc1cGhkc3p3cVVyYVhpTUpwQ2tRank4TlRxcnZEQ2FwRlZBUHFKcmFuUW9mWkNMUFJhUDJhTUM0WGphNkZ2NGFzWG5DQkNoN0hyQ3dmaHFBNUZqdldxWU53YUxRZmpuZDQzbU52cDhqZVp4S3k2UnFZb0V6SGd3NWtESGNLRnc4VFJTZmM2ekg4Y2hxVVBUN2k3YTJlTDdCTE50dVQ2d0dkaVV4Y3J3V0JMRWQ1WTVDaU1ZUFU4RjdMZXhQckVRYWpuTG4yZHNYendMOXkyR3R6VDI3UGNHRG9HM012ZGFRWXJxRnVFR21INjlzTDZqcmJLclFNOUhrVFNuc1BwbW9WQlo5UzZFdXhjQkw5R2JWSkNrQ1ZHejhadnJtQ3g3ZW9YZ0JMZFhIVVV6UzVhUEh3S2F3dkdSeUxmVVZHVUgyV2dkb2p1aUZMY3hqeFFoaE5NcmRreDg5TUZLak52UGVjb1RNenlrUjZpSFFlb3VKTmNWbzZkelBYQ2ttZlpaQmdMeWY1ZGZpYWEzYWM0M0JCaVIzdnBtYVVDdE5qMzdER1ZYOWtkTGVFMllnRUR0RVZoUEh6OFdYQktOZUdKRGhpRmloc3ZrV1Y5ZVR3TmJkWlRqNVBwa3pSellnYVZycW5Db3plR1Z5UHZSOGZxckFSc0tXTlU2UGlhY0RoZ0FSUUZmSmRtSEhWVERCc3BXbUpFQ3l5ODNEM1k3UTlRQnAyRTdGUTNvUUdoRER4YzlMMjI4aWFzMkRLS0FTeERpNmV5R2RCNFlyTERoYnRHZjVYNzM4cDdkVTJ1OEFmZmJMUlJTYVhRTW9xTFFFa3p0N2dqcGtUVlZUZldkTGRZNzhDN3c3RnpSeEhvMmFMOGJxVXNDRWVvd1V3SzhqVkF1WEFUQzJYQTI3WXh4NFl4Zm81NHFjc2FMOUhjYjJ0ODd3VG5IVWpYY0daY3d1aVZ1dWtNc3pDTGZFYU11aXFtdzl5QTRxdk5zZ1pTdWRYczNRZk5BY0U0ZDRhaUVyeDd1bUxzTEVEZWNkdjU4clBlQw==
dldCeHZTQkdEOWRndHBKVktpb2F1YmpvaTg5dDRxcGlUNDdaYWFNMlhIQmJLVXJjN0RrcnhnN24yeXNzaWRKZm1vRmJaZFNETGZBQ2pia2Vzc2hwRWFUREhkTUtwTEJQY20yZWVCNVd0QWpSanNXWXhwcnRBWGN6ekw5em9OZFpRaGt6OGUyaEJEZnNSbVhOYnZrUzltOWNwbW00WVZTakZuMnZxV2RvQ1Bld2E4UjVUdHVNSENua2V2c0hpZk01eVJMeTlaYmp1TW5NRWFrdW1DYndiaFR6NFpiREpQRkhaWWZnVVhHNEI0WlphUDZ3YWFZanRqRHpXTGI0eGc0dDRyS0hSSFloY011WXpwalBZMlF1bWpkQ1c0dWFpNnhVemI1S0FpQkJWclNQUnpieTg5ZkhaU2E3U1VjQlRuazhFSFphSHh3M3l6Y1NzOFhKamloZVJrVGJmem8zWnA3cjVXMnh1bjRjVktMZHprblR0S3hTNm9ucGRDSnFzUjk0ZDVTM3Yza0tIWWpuUFZhdDRBOTN1c0NtdDliOVg4cWI3Wm0yQnZ5NGg2V0dtN0RNSzlwYUtleTd3Y2hVVlJBZWdMTUpKUmczR3lIcmZ4WVRBYUNnN3V0NFNMRjI1OEU3THlhVDZqb3J6QUhnTTUyVm94aDRYTlRaUzVwanViYnUzQTQ0dm95WVNrZ2F6bkVVN3FjaG9BOHZSNk56dnp4VTM0TWU4SnRMTVVMc0NNYWl3RTdhWlpKM3JOdmlLV1lXYlBUQzl2YWZEejNqM0MzZmJhV0tHYUNuUDNOM3BtYmhaY1Y0a1JCdFNZU3kyU1Bvb2c3emhpUGg4VmFpOVRpbTN4MzdHc1hLOTVrb3o3Z05HWWliZ3VWUDYyZVRFZnlyS3FGaENOTVVTa1FoYlJ0dU5DTm9CV0d0d1FoSnNXaFZEQzl2UDI3YnAyU1dCN2RmMnQ0RHhKRUQzcU5oWGpiVEZQUkFjTnFOYWN0UzhaZ00yanViNUd2eWVaTDh2NTNibkd6QVcyNWg5S003U01BYXZycHpjSmFDejNqc0pGTFZHOFdSOXVaRWhUUUNYTmhhZGo2YTdyV2lRUGdTWFlHNFI0WGdkYjJwUnFzZ283bUsya2haTEVoWFJIVUc1a2tlS3haY0ZTY0taUW93ZWhveWNkYmdBQjVrN2F6ZmY0WGJxUTllWVpQVXNyakhDVk1FMll1aVR3WW1pYXJhNXRkZFlOemlaTjZvQnY5eko3dUEyWEtIYnNZUFlRNDZzb2FEb2RubXZ0U2lLTXl5S3J5ZDRhRUxnczlmYUtmYkM1M0hQRWhKY3diZA==
MlE1ZUdNdXFuVnZjc3AzTHp5eFpTMkhySDIyQm1Qc0U4U2tvcGM1ZG4zZjRKSkN6QjJ6c2t6dUZQZzh4cXY3ZmJEdHFhQjRuS0FlWTNhd2lnaXF6VHhQYXF0b3RmbXA1NFFhN0NFY1NkMlQ5bzdhaG5rUnk5NGFoZjVKSE55WGp4Zk5mTFNDSENER2F2YlhNQXVTdWJvQVZTUGFvbXdKV01pNVV4WndyWkNudnFBeGFlZlBneFlXTXE3SDNidXZ4RmtwZXpRS3dZVEp5czlBQ2VKNXFadFdVc04yYTlKblVnWENjcWVGbmFZMlIySk1MMnpyRUVjeXJIQzZha21nR3pROFlOck4zSFdBYWVnSGdGZlY5d012VG81aFRLWjlSd0dzTEt5dE40MzJCR0JRcHB4ZWZhNnp2ODg2NTJ1czlZTlpZRFZoWDVwQXlTUzg2R1BETVBqV2JoZ01HTHAzM2VBSzg3QXhRenNLTDNidGc2dlViR3pGTXdUaTJhTHhKSFlZTEJEcmRyaHRNamREUXlwd2FBcnFrRmE5NmNGR1VRbWtvdkdvUGp0QjNEV3ZSU0F1cHJYNGJKeVVRdFRxRGhTUTVybnhLcXFiemhNQXJWa0xiWVlhRlhrRUdnbjJSb3pFeEhUWU5MTGRCVm5MZ3B6NDVrZWJGeHBqekdoWk5Wa0hLTGllYjU3UTlkWGRwWlZ3N1ZXYlFRS2ZNOGFIRzdqeWtNS25QeDRacThva3RkemlQaGFHWlcyc1pYU3JzR1BCMlE0UEp6blBwc2M4WVNkd1hmY3czbWJuRlpScnQ3ZGFjTnRWNlJQWmFqemNIcDJnREpLakpyNjRvSEhERlU5aW1yOXNFdGtmZHZQRUpzaUhncGJ1b2tCTDlGd1dnbVI2U1k5UG9SZ29BTGZCb1V4eFZLZ3VOZURDWHNleDJQbkx6Z2c3Q2FiUnJNdDlqY1Zpa0g1NU1FV3dwUW1xWFlydFFkRVpocUg4WnJ0bVJZa0J6SzVLYjV2OGtMcDJhWXdDRVVTV0F6b1pranZnZHBNU2Y2d283NzJ2dVZmYk1lajRRQllRZzlnOWc4VWhtR3VSUE1rYVFMWjM5SDNKZFFKdnk0cDlQVG1ScVFzMnNONnhQdlFucGV2S2RjV25hcjZBeVNNMks4S1M1NnljQXhwZ01OS0NKcmFONXhZczhhQ0VIVVBaZ0dQc1VyWUw2dVRQUktYSmJjY2FXMkVtVkU5cXRqbXlFS2o5Mk1UV2ZnNTlkbjhaM0xrWkFjM3ZGb2FqMlo4N3F5dDVZN0IyNmRkUDc3NFZWWXNMajdSc3RXWWE0TFNhOA==
Y1lTYXRGTXA0Sml6MndMZndqNXR4enhRaGRwUGU5Y016Yml6V2E4VThNSldQb1pQVUFOUHByUHpLTjZwU1VhWmF1dUd1ZExZd056WjNiTW53WG1vWjZDcUpFeEV2REpMcDVGWnV5dFpzVDZ1SHY0VnlZSHN2ZWZBemhia3Q4bkxhSm1tc25SRVhvYXNCaG5xN3pEUkVYNm9oSnB1eVNwbjdnNzVOd2pFS2FWanVFM1FKa2JrV29tVjdrQjJzdTJtczRBRzRwQmJRUTRTTEFhMlJyckFvWHc3VHZqWnhvZnlZWlFnWXVDS1JoNlllemZhSjNoajVKaEg3V29xbXlNV0xDVnVud3pXSkRCczZMOGhla3RIMkVSWU1TV0F6TThNaW9ldDZLZXo1Tm01bkRqU1dhY1ZOOHo4bXJldUNVdXJkWUhoWlNTVGdpYllqZmdIcGFMYUx4TlhyYUdMaHdlakVZOWZQaE1CWFRXY1FTSHZxZmd4RU5VY1NhSFpzTTdoREtMaGE5bkxVRzdESnhETGR2dzV0eVJBYWdld3RtcGlqQndGcHlGNlBqVkNZVnVoWG9HanplWGF1OUFDNHdKckZLdHhHVkM3R2JncUpkSGlUZGFXUExUMk5BVWZxeWM4TTdVWGZNZ2tSRzhwZEZkOGJTQ2FIVWZLZFVXNEtTUndlN0V3dmJOakRwUlg2WXJ4NHZON2huV3htTVpUWGRFM015Z1llYjZwS1NvcnBGZ3RIbXE0aWE4cjczelZ4SkZqc2ltaVJxUWlIakVTUTJockF5WFk5b0Z4NHJ6Yng0NktuaTlLcFREcFFNbmI5RnlUbWFRbmFIUWEzZDZuSmkzZXozRTN2N0pQSnZMTlNzaXFqbmVOSFlEYVdYYndCbXl6OUsyaGhiQ2lWeEtZQWp5VzJtdDJRNHlRUVBKUGZnbmU1ZWdrVVFia1R4VEVFU040eTZoeENBVmdUM2JCaWdVU2N3Q2VHZVhHREF0V052YU4yUG9tRnRaYVptS0hjNEpGWnlvVUxFVEVBZUIyV3BpUGFLU2hiNXlmTFJXYVVrdzdGZzVlbjVMcWo4em0ya3ZzN1ZMUXVYZ2JtZW9hdUczOG9qN3ZHZ3NvQVlhemhQQjZUVzY3Wm1xYWNFTFY1VzM4OVNyblhEWHhoaVI3Y1BhS1hMTkR6YWgzbmtvdUJqQmRmSnYyWXVEZmNSQ2dLM1k1U0ZaUDdwRmk1Z05BckR4c3ZmdlhXdDJZWkNlU2ZvNHM1dnRpbzNqM3B3azljd3FRcUJEYmFiR2hFREpTOFJmV3RkS1dWcnZpVjZGY2VuelptYWFMSjhXYQ==
cXY3WEZOMjlaTTY3TGFpdGlNdGF0OVBFeGlnVVZ1VEtWbVBuRnhmN0FrQ1Q4a3hGb29vekIzRlRYb2ZVSGNNQW5lb2lrdk40Wmdnejkzc21pVERhcXlhM2p1VmFtNlVKNHhvaEtyb3lGVHp5WlFjd2NMMjVCYVpxOXNkZ0hiR1p0cWhQSFVmVm84Q3FZVTU3RVplWVMyNWFCSzlYVFRROEhmNWE3enVBQmlqa2ZxRUNkNW1zcTZlTDRTNU53WkVFUE1iVU16eXp4NmpWR3NRTTlDNG9hQXVxeGZYYkF1OE1ORTg2a0JiaERyVXdtNTJrcEh4bU1rM0dIRVlUNVI5Y2RaSlFMWVZCdUtRSE1hR04yeXlyVEY4Rzc2WHhFM01oZzl4WFFVMkc4NGpCSnBYcDlFaDVraUQyOXZSYWRzaFQzWVFjb2tZTExWODdjTnZ0WWJ5RkZhYXdubjhxbkhMRFNTMnZBY0duOGVtQUhvMkMzUENuU1l3VFBBTEQ0b3c2VnVvTW9DR3JSYWJtNjRBd2pUZ2hmSngzWm1EamhMcFBjVllaVncyNnJzVGNyVXBkOXpjOHIzRnJvajd5VUhjb3p3NEQ1V1RhcGRyUTVLVWtFclN1b2FwTjRSVG5LU0thaHA2cUF6SFg0UVFNdURnQWg0UjV3aHFFVks0aWZFcGF6YlhTczRTY3Z4ZVZIWFFGZWVIdmhyU0JnN0Q2YW45SnkzRDlhOFkzckxEYlFpTGdZOWd4d3AzVUZhYlk4YzZLRFNhek1nTE0zcHhhOVdpVlVXTHhUSGRpZXhFejY2elFYS0hkSHF3YUQydkxTdUhOWkN5dFBFeUN3c1d4NVNzZWdpTHdOZ0RTblpYanNZTk5zZ0RFRFpqQ0E2ejhnNjZrNmVKSEFuN0RDd1dhQnlDQVJkWmdyQnE5YjJoNk5lOVZMR25tbzh6Q1czbW1ZOVRwUG9XNUZnQkxoRzJxTnhjQ0U5RE04M05RZ2E1RVdxa1lTU284V2N5Mmp1UWhqc0huUjVoaXdVSkZzVGlTN2ZoRlJZMzVHY0tjUFR6d1Fvd0x6Sk1MdmRjM3JCWjNvb0JTNUtzYkRVYXJyQldhNURZc0pNb3dqc0pGVXF1cWFOYU1IWDNrV2l6clNKa2lNeGtMa1FpSnJxYVRaR2djVWt5YUVZQlVMOWFWSDVhNEdmaVpyNVhQZE1WNEZaaDMzVE5hVnBmQnNlZVdSS0c1WmlSNjN5ZGFjRG5VVzZWN2VzYW9yc1ZiYVNhU0YyVHpVOWdTU04yQXlFUTlZeFI5YmFtUGNhaWdSejJjVmNrRUVMczJxbm0yTFpDOA==
MWI4M2FjRjYxOUM2ODg1OEM2MWM2Mzg1YkRjNjZFQ2I2NGRkQTZDZmI2OEZCQkE5ZjFiRTY5YzFiNTRmZTlhNkZCM2ViRTM4YmI1N0VCQjFFMEVhMTZiOTA2NGQ3YkNCMEMzY2Y2QzBGZUVFYmJCRjVBOUZDOTUzQTZjYUJBMzg3RjVhMEE5RURENjRFZGRkZWMyNWIzMEE1QzE1YUZlOUNEOGJFMzJFZmJjRmYyMTJhZWVmNEExOTlkRUZDQ2E2MzlkY2IyQ0ViNjYwRERBYUYxMTg4QURiQjQxMWFBQkU3QTMzN2RDOEYyQ2FiRmRDQkVDZDNCZDgzQjViMDUzQUZCRTI2NWU4M2NjNDE4Qjk5Y0NmZUE1NmUxYjYwMTNDREVCRWUxNUU2NTVEQzdFMDNGMTNDODM4Q2E1NzIxMDgwQUY1ZUFlZUYxZWRCODQxNjcyNUZmMWI5MzQ5NmVlRjZBNEZkOUI0MTZmZDExYkM5RDhCNTExQTNFYkVmRDZEZTI2NWI4OTY5NjdCQ0VDRmRFNkZENGYzMWRjNjQxMDdhQjBDYjZCNzhkYTEwRTUxNjdGRkFENzRFZDliRTc4REM2ZDRERkMxREViZmFhQ2ZGZDMwMzFmNUVFRjBGYTdhNDlDRjdiZWUwMThCNDhiMGQwMTk2QmRBRjdjYTE2RkE0YzFhOGZGODVmMGZGREFDQUQzNzJkRjcxZTllMWFEOUZlZWJlMWM0NURmMTMxZTI5Q2FmY0JmYWVFRTVBYkYxRThDNEJmOEZmRUVjQkRlN2U0OGRGZjVDMzhiODUxQTA4NEI4RDJjMDIzNjFFQ2Y0ZEFCNTlFYWNlODUzRmJBNTY2MkMxQzdGRGFjY2RiOWMxZUJDMmFhODZjRDA4NjdCZjNEQmY4N2FiNjUyN0ExRUUwNDJkQTFkQWFENEVjODI3OGZGNkNhRDI3ZkRFNTA2ZGVFN0MyYTJDMzc3QzBjOTkxNWVCZTJGMTdlMjJjZTliOEZEMUUzMTg3YjkzZTdlNTk2Y0FhZEJmQjVlOEVjNzMzNmY0Y2RmRmVDNGZiQkZDOTNlREZmODk4MUY1OTlCZWIyYmJhQmJCYUE1OEVBQkE3MjZkQTBhMjk2QzdiMkViNmJmY2E0MkNiREY4NzYyODRDNkMyMDJCQzkyQWE1MUQwMzZBRGZhNkZBY0M4QkZCM2NhNmZGODFiYjRmQkRiZUNCQjliOTdhNUUzQTIwRjBkYjYwRGYyNDZGNGFBOEI5YTU2NTFmNWZBZmU2QkRiZDg0RTczQkRGNEZlY0NiMTRhMUVmYzE5RDc5YUZENWZmZmU4YTM0OA==
VFB2QVFRZkxuQlZIa2FIamc5U0JOWUVSak5ZVUNQUGQyZm5rZ1VVc0pTZ1VDOGtZeUtFVUJ3SjlUVkw2cDVSYUdRRTN1Q0dOSml1RHppUHVFRERhTkpQSzJjeW56S291a0dpblg0ZVB0V0M5NXg0M1hXZVk0akhVdDJCc2hQbzdOQzlkZlFLZU1FeVh0UXg5UXJSelRLUlJ5NHdYR2R2Q0twcFBBUGlnSkxpbllmamI5cEtOYVl6dnFkYmpGbm82NUtNTGhHcmgzSnZiSmtnUHoyQ1lndnlwVkZhNlhUc3F6UTJMM0x5dG1kOGRtTW9WQlpHTnhLSmhqcHdxWXJzN21lQ0ZhR0FKemFDTTVFMnR2aXlVUXhlc1d0Q1YyWW5YN1FNUVRTenV6TktkZXpIWGFSYnU4akxTYXlyWnpkcWFKbWk0SGczQXN5aHVyeWY4TEZ1WnFpV3lRNlJBZzNDRldha3dQRmR6UHphRzlIY0VEU2dkS3Q4OVRCSEZtZ1dGeHRITVVhc1VIbUtIVU50SHRLTFVVQWpUZHRKd1FOVGdjRXdWYlZXb3VuVmJleTlDRU1iZUpabXFiWVVVdG9vdWpBWTJBNGthRGEzTGdnTmVzaHo2V0VZU1hjWVhSYkJaRnRpNWhXTno3ZE5GdWphWDdmc1FWSGVCd3JEYUZtMlEzUmFXbkhiZzNpSjdIVWd5ZjRDalRhYVJ5WUhldmVuRUVSdjNjdHBVbjIyZ1NueUdueDh3a3ZGVXZDeVdpa2FHYXRhYnVhWUNRUXpITWVQY3o4dE5GYXFiUXBBeTN3RmJuam02VVdraUpZSDJhVVVwTTl3a0txN3k3a2lobnpaTE1ZY2FiYWppSjVTMlhLcHBuNGtLOTRHaU1LbllSaWR2N3VvYlV1NXBYaUZ4MkxjYVpSdFFlRWdickp1VkczRDJEWTRrd1llV3VuQjZoWWpxalNqb0ZmUTdUalVhU3ZCejhFd3hmdnFRS21vR0U3dWh5c29iOTZWb2F0ZG5RdUhFR0F6amdjSjNoZ3BrcVQ4WjVSRWFuU2pWUGtpMmNUMkVKeFRBU3NFd2RzcVp2RndmWHpWcWFBOFE1NHBEa1lkeDJCcjVNd2piV3pmRmFUZnFTZGhuUlBpR2JraGdxeVdvN0hlMnNGUjZUdGMyZW92TWpvS25EWUpwa3JQUFptelpNWUd6dk1OUmFUY2RIQXVkcVBSRFVIeWRBaEpTS0JiTVpFUUptd0JXaWl0TnlCdkFCYWR5Ynp6Z2JONlNSSDlXbUdSTFBnV2R1R3VLc2djNjZvVVVOa0VDc29kOFZuOURZb3E1Y2o3Qg==
cWNKdWZEOTVlWDJaTHoyZ0g0ZWFCV21pbmczeG12bWpqOVF1SEdWZ2tYNzVDb2NZTDY0OEdKZ0hrVEI4N1RmdEJYYW5OMjlIOXhNTmFhRTN5cWZKdlFBVEhzTmNialZLcWJhNUZxSER1dkRNWXdkM2E4aWVFdHhMQjc2cjlwckxvRkw5WFhKcU1uQTc3WVhKNko5YXR2aFA3UG96VDRWZEJWdUtYZG1IS01uNm8yTWdlY3RhMkZXelk3aEZzU2NMUmNjbWpadmRDVllhbk0yYUR1U1pOSHB4dW5GbjZEOXB6Zkw2WUFuYjZZRTZFaXJYdjRlcGFxNWFjTXBOMjRjVnROQVlhWnl0TEJIaUJCaDNFNUJvYjdZY05HbTNTR2l5RDRFZ1NEa2VvUWFXUWNDcTZ3N3V2SnRyM2ZLclJBUkxjZ25ianR1NXIybXBXaDl4QnZiUVVSTEN0cjdCQTdkTFpuTlJiQnZlZGlLQzlDcU42QlJ1czdXN3dkWVRXeDl1M1VoWWp0RXZVNXRkYjNpS1dlVnFuUDU2dERMbWk1bThBY21YYUpWcW13cmRldWFDY0ZqcGVuaXpnTDM5YUNObVFjcWh5VnNhTFl4SDQ0d1ZKcHpIcDRvWFlaU1FxOWNrak1uYUZqVzlOdXZFczl2Z0RwTVc2YVZSRFhIZHRUTVJFZkQ5RXZvanBDYjlvc0JiUGJLZ2lTRWhvNGp6TVRtM0E0Z0FNTHliNzRwZkJSVVBzSGF3RFI5NlpzcEtHaWs5d3F6RDZEcVRWY0ROdXlLWVZWYU1CWkc4NWlrQURrNDR0dWhjWTRHRThXZzNSdzlYWkpwRFRNV0JoWmVzYWZIRDJGRUJYZFFqTVVMMjdLa1U5c0g0WTI0aUd3VEVUTWFxcW5FeG9US1p0d1ZRTEJ1Um9TOHdldWJNOGREUjV4cHdhU2FXZXlFWEpzZ3FxQ3IzNFp3RU5SSlZIN0JVZXZ5dWhaWDhoS2YyWkZDbzRMU1k3WnRCV0hDSDlnbVdkaVEzODR5blJGVDJYbUtLc1l0ODdzOHJKaWRLdmZMb3dkcTRkcXN3TUoydkZMbUJ5VmpwVnJzTlkyQk5ZWmtzZlEzcHNzZkdWWmtYWmVFZDRFS2s1YUpwVHNFWDNOOERtSDM3cDZDNWVWZlFwYnVheGhXSjdiTjdpc3NhcllDWmRYYm1YcnA4M05GZzlCdnRkN21QRnM3bUxRMmg4b3d1aUpyeGM2MlFMYkpSUVVVY3pmZ3dkN1NCalk4RkN6YWVHTFk0N0xSZlphRGZ3UHcyY2JiUVVyZ1ZnYm94Q1g2U0Q5OGtmZGhQbUZ4cA==
OEFzVE5LRVpTeXNTVGNwRTNMYUJBNlpyNE1ycXIzYlhvSkt2QmZXam56aXVBMzNjeGtBcFZIOURqdzMydko5TEdhRTU5cFdETFRvZzV0VzRMTnROWG5YYXI5OXJUUHZHY0tzeU5WVE5keWFCY0txdERNakFadVVtZXpXWGU2dGRyaWd6OWFFUFRwaVUyU1NIZGZRRUFIYTR1dzlOcEpjRkdpQ1I5dFg3MnVUanBnUUo1bU5LUF"""

for line in s.strip().split("\n"):
    lined = base64.b64decode(line.strip()).decode("utf-8")
    # print(s)
    match = re.search(r"[0-9a-fA-F]{20}", lined)
    if match:
        print(line)

        print(lined)